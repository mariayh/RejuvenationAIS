% This file was created with JabRef 2.7.2.
% Encoding: UTF8

@INPROCEEDINGS{Olagunju1989p1586-1587,
  author = {Olagunju, D. A. and Pedersen, W. R. and Quam, L. and Leatherman,
	S. and Goldenberg, I. F. },
  title = {Thinking: project management in health computing},
  booktitle = {Proc. Annual Int Engineering in Medicine and Biology Society Images
	of the Twenty-First Century. Conf. of the IEEE Engineering in},
  year = {1989},
  pages = {1586--1587},
  abstract = {The mechanics of project <span class='snippet'>management</span> in
	<span class='snippet'>health</span> computing are discussed. A loop-connection
	of human efforts tapping resources from available <span class='snippet'>software</span>
	to deliver successful project <span class='snippet'>management</span>
	is shown. Project <span class='snippet'>management</span> <span class='snippet'>software</span>
	packages are listed. The essential features of good project <span
	class='snippet'>management</span> <span class='snippet'>software</span>
	are outlined},
  doi = {10.1109/IEMBS.1989.96354},
  timestamp = {2012.02.20}
}

@ARTICLE{Carr1991p15-19,
  author = {Carr, R. and Tynan, M. and Davis, R. },
  title = {Quality and security, they work together},
  journal = {IEEE Aerospace and Electronic Systems Magazine},
  year = {1991},
  volume = {6},
  pages = {15--19},
  number = {9},
  __markedentry = {[mariayh:]},
  doi = {10.1109/62.90965},
  timestamp = {2012.02.22}
}

@INPROCEEDINGS{Gilfix1999p254-255,
  author = {Gilfix, M. },
  title = {An integrated software immune system: a framework for automated network
	management, system health, and security},
  booktitle = {Proc. Conf. Local Computer Networks LCN '99},
  year = {1999},
  pages = {254--255},
  abstract = {Maintaining the integrity of large-scale networks is becoming an increasingly
	daunting task as networks expand at an unprecedented rate. The majority
	of present network monitoring and maintenance tools require a substantial
	investment in human resources to sift through vast quantities of
	information, to detect problems, and manually resolve them. Computer
	immunology is the solution to ever-increasing network maintenance
	overhead. This paper seeks to define computer normality through a
	policy-driven process and provide a framework for conserving network
	<span class='snippet'>health</span>. The goal is to automate network
	<span class='snippet'>management</span> as much as possible. This
	methodology combines the benefits of two existing systems as well
	as incorporates other critical elements to provide an integrated,
	flexible, versatile system},
  doi = {10.1109/LCN.1999.802065},
  keywords = {software health},
  timestamp = {2012.02.20}
}

@ARTICLE{Anderson2001p46-53,
  author = {Anderson, J. and Fleak, F. and Garrity, K. and Drake, F. },
  title = {Integrating usability techniques into software development},
  journal = IEEE_M_S,
  year = {2001},
  volume = {18},
  pages = {46--53},
  number = {1},
  abstract = {Now merged into Siemens Medical Solutions <span class='snippet'>Health</span>
	Services, our company, formerly called Shared Medical Systems, creates
	clinical, financial, and administrative <span class='snippet'>software</span>
	for the healthcare industry. Like other medium to large companies,
	SMS had reached a scale and maturity level that required the development
	process to be documented, predictable, repeatable, measurable, and
	usable by the development groups. After much study and consideration,
	senior <span class='snippet'>management</span> committed to implementing
	a universal OO development methodology. Senior <span class='snippet'>management</span>
	recognized the need to improve customer satisfaction, which had always
	been high but needed to he better in an increasingly competitive
	market. <span class='snippet'>Management</span> saw the introduction
	of usability practices as a prime means to achieve this objective.
	So they began to place greater emphasis on usability-even to the
	point of building and staffing dual state-of-the-art usability labs.
	Our goal throughout the projects we describe was to combine the best
	OO analysis and design practices and usability techniques to create
	a powerful, unified way to develop <span class='snippet'>software</span>},
  doi = {10.1109/52.903166},
  timestamp = {2012.02.20}
}

@BOOK{郭永基2002可靠性工程原理,
  title = {可靠性工程原理},
  publisher = {清华大学出版社},
  year = {2002},
  author = {郭永基},
  volume = {1},
  note = {第6章},
  file = {(2002 Book)可靠性工程原理 (实验设计).pdf:02_软件可靠性相关\\06- 图书 技术报告\\(2002 Book)可靠性工程原理 (实验设计).pdf:PDF},
  keywords = {reliability, availability},
  timestamp = {2012.03.18}
}

@INPROCEEDINGS{Ge2004p3725-3732,
  author = {Jianhua Ge and Roemer, M. J. and Vachtsevanos, G. },
  title = {An automated contingency management simulation environment for integrated
	health management and control},
  booktitle = {Proc. IEEE Aerospace Conf},
  year = {2004},
  volume = {6},
  pages = {3725--3732},
  abstract = {This work presents an automated contingency <span class='snippet'>management</span>
	(ACM) <span class='snippet'>software</span> simulation test bed developed
	in Simulink that can be applied to various unmanned platforms for
	developing; testing and verifying automated fault accommodation strategies.
	Specifically, this paper introduces the required <span class='snippet'>software</span>
	components and integrated <span class='snippet'>health</span> <span
	class='snippet'>management</span> and control architecture for performing
	these tasks and applies it to the unmanned combat armed rotorcraft
	(UCAR). The ACM Simulink Blockset provides for ''plug in play" integration
	of UAV models, prognostic and <span class='snippet'>health</span>
	<span class='snippet'>management</span> (PHM) algorithms, adaptive
	flight control logic, and intelligent agents into a simulation-based
	design environment. By integrating advanced <span class='snippet'>health</span>
	<span class='snippet'>management</span>, intelligent control, and
	intelligent reasoner strategies, the ACM simulation test bench allows
	designers to examine optimal fault accommodation techniques that
	can increases availability, improve safety, and optimize maintenance
	resource planning for complex vehicle systems. The demonstrated graphical
	user interface enables the end users to initially configure the ACM
	system and monitor the effectiveness of the vehicle simulation under
	various fault scenarios. It also enables users to rapidly design
	and simulate ACM components for integrated <span class='snippet'>health</span>
	monitoring and control system for helicopter robotics, UCARs, reusable
	launch vehicles, propulsion, aircraft, automotive, etc.},
  doi = {10.1109/AERO.2004.1368190},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Jaw2004p3756-3763,
  author = {Jaw, L. and Wang, W. },
  title = {A run-time test system for maturing intelligent system/vehicle capabilities
	- SIDAL},
  booktitle = {Proc. IEEE Aerospace Conf},
  year = {2004},
  volume = {6},
  pages = {3756--3763},
  abstract = {Equipment <span class='snippet'>health</span> <span class='snippet'>management</span>
	(EHM) or vehicle <span class='snippet'>health</span> <span class='snippet'>management</span>
	(VHM) often involves on-board, real time monitoring of operating
	conditions as well as providing control, operational, and maintenance
	decisions based on assumed conditions. For an off-board <span class='snippet'>health</span>
	<span class='snippet'>management</span> system, a "copy" of the on-board
	system functionality is desirable, because it provides a "simulated"
	environment to recreate on-board operating conditions for the purpose
	of verification/validation of <span class='snippet'>health</span>
	<span class='snippet'>management</span> related decisions. The off-board
	system, for lack of computational timing constraints, is usually
	equipped with more sophisticated modeling, analysis, and verification
	capabilities; hence it provides an environment to improve/mature
	on-board system capabilities. Although a system integration laboratory
	(SIL) is an essential environment for maturing on-board EHM/VHM capabilities,
	the SIL is typically available late in the design and verification
	process when developmental hardware becomes available to support
	hardware-in-the-loop simulation; furthermore, a full-featured SIL
	is expensive, and it is not available for subsystem suppliers and
	integrators to engage in incremental design and development testing.
	Hence, a low-cost, easily accessible run-time environment to simulate
	on-board operating conditions with control and <span class='snippet'>health</span>
	<span class='snippet'>management</span> algorithms is highly beneficial
	and desirable. This paper presents a solution to improve the design
	maturation process by reducing the dependency on the full-featured
	SIL. The solution is a System Interaction and Design Assurance Laboratory
	(SIDAL). It is a run-time integrated test system to facilitate the
	development and implementation of diagnostic, prognostic, and decision
	support algorithms, including models. It can be configured with,
	or without, actual subsystem hardware (or components). SIDAL is an
	essential design and development environment for maturing <span class='snippet'>health</span>
	<span class='snippet'>management</span> capabilities, especially
	when increasing emphasis is being put on decision assurance and accountability,
	which needs to be evaluated in a run-time, closed-loop environment.
	We believe that SIDAL can speed up development processes and mitigate
	implementation risks, especially under the requirement of maximizing
	<span class='snippet'>software</span> reusability for multiple vehicle
	- configurations as in the US Army's future combat systems (FCS).},
  doi = {10.1109/AERO.2004.1368194},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Yu2004p58-59,
  author = {Yu, P. and Yu, H. },
  title = {Lessons learned from the practice of mobile health application development},
  booktitle = {Proc. 28th Annual Int. Computer Software and Applications Conf. COMPSAC
	2004},
  year = {2004},
  volume = {2},
  pages = {58--59},
  abstract = {This fast abstract briefly discusses lessons learned in terms of how
	to overcome limitations of PDA devices, effectively capture requirements
	for mobile <span class='snippet'>health</span> application development
	and effectively reengineer a desktop application on PDA. The limitation
	of PDA devices includes: (1) small screen size, which limits text-based
	data entry, reporting and browsing; (2) limited storage space and
	slow processing, which requires effective and efficient coding generation;
	(3) security limitations and inadequate third party application support,
	which poses challenge for application development. The corresponding
	strategies addressing the above challenges are: (1) providing check
	box, radio button, drop down list, text field, combo box based data
	entry and minimize text-based data entry, such as text area; (2)
	allocating as much as possible data storage, communication and computation
	tasks to the desktop system and minimize the function PDA component
	needs to handle, store data in file instead of database on PDA; (3)
	carefully selecting the device and implementation platform that supports
	development. To maximize the usability of PDA-based <span class='snippet'>health</span>
	application, the solution to be implemented on PDA ideally should
	be data <span class='snippet'>management</span> tasks with minimum
	text-based data entry and high frequency of recording. Challenges
	and solutions for <span class='snippet'>software</span> reengineering
	from desktop system to PDA-based application is outlined based on
	one application developed for World <span class='snippet'>Health</span>
	Organisation. In this example, the complex task of communication
	among PDA-based application, desktop system and the existent desktop
	application EpiData is effectively handled through the utilisation
	of XML files. A dynamic tool 'Questionnaire Designer' provides a
	completely dynamic user interface generation tool that could easily
	be handled by end user. The design idea for this application sets
	up a model for mobile <span class='snippet'>health</span> application
	with adequate flexibility of handling changing data <span class='snippet'>management</span>
	needs of end users.},
  doi = {10.1109/CMPSAC.2004.1342675},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Chu2005p96-100,
  author = {Chu, S. C. },
  title = {From component-based to service oriented software architecture for
	healthcare},
  booktitle = {Proc. 7th Int. Workshop Enterprise networking and Computing in Healthcare
	Industry HEALTHCOM 2005},
  year = {2005},
  pages = {96--100},
  abstract = {Traditional approach to <span class='snippet'>software</span> development
	has always been expensive and risky business especially in the complex
	healthcare market. Object oriented design model moves <span class='snippet'>software</span>
	development away from monolithic systems towards component-based
	<span class='snippet'>software</span> architecture. Advances in distributed
	database, network and Internet technologies, the need for more flexible
	and responsible business usher in the service oriented architecture
	(SOA) as the new <span class='snippet'>software</span> design paradigm.
	<span class='snippet'>Health</span> care activities are defined as
	coordinated intentional actions packaged as "products" or services
	that are organized based on workflow <span class='snippet'>management</span>
	principles. The SOA is considered as highly suitable a new <span
	class='snippet'>software</span> design model for the healthcare industry.
	This paper illustrates how clinical objects from an object-oriented
	clinical information systems can be mapped to the SOA structure.},
  doi = {.2005.1500402},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Wilmering2005p3910-3920,
  author = {Wilmering, T. J. and Ramesh, A. V. },
  title = {Assessing the impact of health management approaches on system total
	cost of ownership},
  booktitle = {Proc. IEEE Aerospace Conf},
  year = {2005},
  pages = {3910--3920},
  abstract = {The integrated diagnostics and integrated vehicle <span class='snippet'>health</span>
	<span class='snippet'>management</span> (IVHM) processes provide
	frameworks that seek to maximize product availability and simultaneously
	reduce total system ownership costs. A system engineering approach
	is required to balance system requirements and design goals with
	effective implementation methodologies throughout the system acquisition
	life cycle. Prediction of failures (or prognostics) is just part
	of an effective, integrated <span class='snippet'>health</span> <span
	class='snippet'>management</span> solution. Implementation of an
	efficient methodology will achieve a balance of <span class='snippet'>health</span>
	<span class='snippet'>management</span> technologies - the right
	mix of diagnostic, prognostic, and scheduled maintenance approaches
	based on available resources and life cycle cost considerations.
	This paper focuses on means for assessing the impact of potential
	<span class='snippet'>health</span> <span class='snippet'>management</span>
	approaches on life cycle cost (LCC) as implemented within a system
	engineering framework. A disciplined approach to selecting appropriate
	<span class='snippet'>health</span> <span class='snippet'>management</span>
	solutions to satisfy design and operational requirements will be
	presented, and a <span class='snippet'>software</span> tool for performing
	trade studies of alternate approaches' impact on life cycle cost
	will be discussed. A primary goal was to allow domain experts and
	<span class='snippet'>health</span> <span class='snippet'>management</span>
	specialists to perform thorough life cycle cost analyses without
	requiring the services of specialized cost analysts. OCCAM has been
	successful in this respect, with initial applications providing immediate
	payback. A patent application was filed in 2004},
  doi = {10.1109/AERO.2005.1559697},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Karim2006p177-182,
  author = {Karim, F. and Thanneer, H. },
  title = {Automated Health-Assessment of Software Components using Management
	Instrumentatio},
  booktitle = {Proc. 30th Annual Int. Computer Software and Applications Conf. COMPSAC
	'06},
  year = {2006},
  volume = {2},
  pages = {177--182},
  abstract = {<span class='snippet'>Software</span> components are regularly reused
	in many large-scale, mission-critical systems where the tolerance
	for poor performance is quite low. As new components are integrated
	within an organization's computing infrastructure, it becomes critical
	to ensure that these components continue to meet the expected quality
	of service (QoS) requirements. <span class='snippet'>Management</span>
	instrumentation is an integrated capability of a <span class='snippet'>software</span>
	system that enables an external entity to assess that system's internals,
	such as its operational states, execution traces, and various quality
	attributes during runtime. In this paper, we present an approach
	that enables the efficient generation, measurement, and assessment
	of various QoS attributes of <span class='snippet'>software</span>
	components during runtime using <span class='snippet'>management</span>
	instrumentation. Monitoring the quality of a component in this fashion
	has many benefits, including the ability to proactively detect potential
	QoS-related issues within a component to avoid potentially expensive
	downtime of the overall environment. The main contributions of our
	approach consist of three parts: a lightweight component instrumentation
	framework that transparently generates a pre-defined set of QoS-related
	diagnostic data when integrated within a component, a method to formally
	define the <span class='snippet'>health</span> state of a component
	in terms of the expected QoS set forth by the target environment,
	and finally a method for publishing the QoS-related diagnostic data
	during runtime so that an external entity can measure the current
	<span class='snippet'>health</span> of a component and take appropriate
	actions. The main QoS types that we consider are: performance, reliability,
	availability, throughput, and resource usage. Experimentation results
	show that our approach can be efficiently utilized in large mission-critical
	systems},
  doi = {10.1109/COMPSAC.2006.117},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Karim2006p50-57,
  author = {Karim, F. and Thanneer, H. },
  title = {A Classification Scheme for Evaluating Management Instrumentation
	in Distributed Middleware Infrastructure},
  booktitle = {Proc. 4th IEEE/IFIP Workshop End-to-End Monitoring Techniques and
	Services},
  year = {2006},
  pages = {50--57},
  abstract = {<span class='snippet'>Management</span> instrumentation is an integrated
	capability of a <span class='snippet'>software</span> system that
	enables an external observer to monitor the system's availability,
	performance, and reliability during operation. It is highly useful
	for taking both proactive and reactive actions to keep a <span class='snippet'>software</span>
	system operational in mission-critical environments where tolerance
	for an unavailable or poor-performing system is very low. Middleware
	infrastructure components have taken important positions in distributed
	<span class='snippet'>software</span> systems due to various benefits
	related to the development, deployment, and runtime operations. Keeping
	these components highly available and up to the expected performance
	requires integrated capabilities that allow regular monitoring of
	critical functionality, measurement of Quality of Service (QoS),
	debugging and troubleshooting, and <span class='snippet'>health</span>-checks
	in the context of actual business processes.. Yet, currently there
	is no approach that enables systematic evaluation of the relative
	strengths and weaknesses of a middleware component's <span class='snippet'>management</span>
	instrumentation. In this paper, we will present an approach to evaluating
	<span class='snippet'>management</span> instrumentation of middleware
	infrastructure components. We use a classification-based scheme that
	has a functional dimension called Capability and two main quality
	dimensions called Usability and Precision. We further categorize
	each dimension into smaller, more precise instrumentation features,
	such as Tracing, Distributed Correlation and Granularity. In presenting
	our approach, we hope to achieve the following: i) educate middleware
	users on how to systematically assess or compare the overall manageability
	of a MidIn component using the classification scheme, and ii) share
	with middleware researchers on the importance of good integrated
	manageability in middleware infrastructure.},
  doi = {10.1109/E2EMON.2006.1651279},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Karsai2006p-,
  author = {Karsai, G. and Biswas, G. and Abdelwahed, S. and Mahadevan, N. and
	Manders, E. },
  title = {Model-based software tools for integrated vehicle health management},
  booktitle = {Proc. Second IEEE Int. Conf. Space Mission Challenges for Information
	Technology SMC-IT 2006},
  year = {2006},
  abstract = {Present day IVHM systems are often constructed using hand-written
	code that is hard to produce and difficult to verify and maintain.
	In this paper we introduce a suite of model-based tools that allow
	for the construction of embeddable IVHM applications using a model-based
	approach. Reusable (and potentially validated) reasoners are used
	in conjunction with executable code that is generated from models,
	thus allowing the integration of the reasoner as a component into
	a larger on-board system. This paper describes the toolsuite, the
	modeling approach used, the runtime environment, and some of the
	applications where the tools were used},
  doi = {10.1109/SMC-IT.2006.51},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Sheppard2006p174-180,
  author = {Sheppard, L. and Lumpkin, T. W. and Kelly, T. },
  title = {A KISS Approach to Embedded Health Management},
  booktitle = {Proc. IEEE Autotestcon},
  year = {2006},
  pages = {174--180},
  abstract = {A design philosophy that has been used in many problem solving situations
	is "keep it simple stupid" (KISS). The gist of the phrase is that
	simpler solutions are typically the best solutions. Where, depending
	on the application, 'best' can be defined as the most reliable, quickest
	to implement, easiest to use, etc. but it basically boils down to
	the lowest cost solution. So in the context of embedded <span class='snippet'>health</span>
	<span class='snippet'>management</span> what does a KISS solution
	mean? It simply means reducing the complexity of the design and development
	tasks of an embedded <span class='snippet'>health</span> <span class='snippet'>management</span>
	to yield a simpler approach and therefore lower cost solution. To
	this end, core processes of supervisory control and data acquisition
	system (SCADA) methods that are employed by industry to monitor and
	control processes will be utilized to provide an easy to use data
	acquisition tool for embedded <span class='snippet'>health</span>
	<span class='snippet'>management</span> systems. This paper describes
	the hardware and <span class='snippet'>software</span> of a data
	acquisition system that provides an intuitive approach to the implementation
	of an embedded <span class='snippet'>health</span> <span class='snippet'>management</span>
	system on a military platform. Thus, describing a KISS approach to
	embedded <span class='snippet'>health</span> <span class='snippet'>management</span>.},
  doi = {10.1109/AUTEST.2006.283622},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Azzam2007p1-12,
  author = {Azzam, H. and Beaven, F. and Smith, A. and Hebden, I. },
  title = {FUMS Technologies for Advanced Structural PHM},
  booktitle = {Proc. IEEE Aerospace Conf},
  year = {2007},
  pages = {1--12},
  abstract = {Over the past seven years, Smiths and BAE SYSTEMS have launched collaborative
	work to evolve a certifiable practical Structural Prognostic <span
	class='snippet'>Health</span> <span class='snippet'>Management</span>
	(SPHM) system. The collaborative work has built on BAE SYSTEMS' vast
	advanced technology experience and on Smiths' unique experience that
	has produced intelligent Fleet and Usage <span class='snippet'>Management</span>
	<span class='snippet'>Software</span> (FUMS<sup>TM</sup> ) including
	fusion, prognostic and decision support algorithms combining model-based
	and Artificial Intelligence (AI) techniques. This paper describes
	the recent advances and optimisation of the Smiths algorithms for
	damage detection and Operational Load Monitoring (OLM). A combination
	of FUMS<sup>TM</sup> signal processing and AI techniques have been
	applied to acoustic emission sensor data to locate and classify damage
	of different types in composite and metallic structures. The FUMS<sup>TM</sup>
	damage detection <span class='snippet'>software</span> has been embedded
	in real-time hardware to support ground tests. Techniques have been
	implemented to enable adequate calibration of OLM algorithms using
	data from flight tests. The techniques should address concerns raised
	about the accuracy of algorithms trained to synthesise strains throughout
	the entire flight envelope from data recorded close to the edge of
	the flight envelope. Working with the UK MOD, Smiths has continued
	the evaluation of FUMS<sup>TM</sup> <span class='snippet'>software</span>
	that allows aircraft design authorities and military operators to
	build their force life <span class='snippet'>management</span> applications
	without the need for <span class='snippet'>software</span> rewriting.},
  doi = {10.1109/AERO.2007.352908},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Clark2007p1-13,
  author = {Clark, G. J. and Vian, J. L. and West, M. E. and Syrmos, V. L. and
	Randolph, W. F. and Hardman, W. J. },
  title = {Multi-platform Airplane Health Management},
  booktitle = {Proc. IEEE Aerospace Conf},
  year = {2007},
  pages = {1--13},
  abstract = {The Integrated Airplane <span class='snippet'>Health</span> <span
	class='snippet'>Management</span> (IAHM) program is a Navy research
	activity led by The Boeing Company with support from the University
	of Hawaii, Referentia Systems Incorporated, and Impact Technologies,
	LLC. The program focuses on interoperable multi-platform aircraft
	<span class='snippet'>health</span> <span class='snippet'>management</span>
	data handling and analysis methods applicable to military aircraft
	and commercial air transportation. A primary goal of the program
	is to significantly increase aircraft system reliability, safety,
	maintainability, availability, and affordability, resulting in improved
	mission performance and operational capabilities. As such, improved
	aircraft data accessibility and interoperability is viewed as a key
	enabler. The program consists of three phases leading to a proof-of-concept
	demonstration to show technical feasibility and potential payoffs
	for both military aircraft and commercial airlines. <span class='snippet'>Software</span>
	data loading translators have been developed and are being used to
	populate a new MIMOSA-based multi-platform <span class='snippet'>health</span>
	<span class='snippet'>management</span> database that can interface
	with common algorithms to support condition-based maintenance practices.
	In particular, this paper provides an overview of the concept and
	the efforts of the IAHM team in accommodating a variety of representative
	aircraft <span class='snippet'>health</span> data from F/A-18, C-17,
	and 737 platforms.12 A graphical user interface has been developed
	to access the IAHM database for data visualization, new diagnostic
	and prognostic algorithm research and development, and also for processing
	new datasets with the <span class='snippet'>health</span> <span class='snippet'>management</span>
	algorithms being developed. The resulting IAHM database schema, data
	interface methods, and algorithms are applicable to new, derivative,
	and current aircraft.},
  doi = {10.1109/AERO.2007.352944},
  timestamp = {2012.02.20}
}

@ARTICLE{Dai2007p781-795,
  author = {Yuan-Shun Dai and Min Xie and Quan Long and Szu-Hui Ng},
  title = {Uncertainty Analysis in Software Reliability Modeling by Bayesian
	Analysis with Maximum-Entropy Principle},
  journal = IEEE_J_SE,
  year = {2007},
  volume = {33},
  pages = {781--795},
  number = {11},
  doi = {10.1109/TSE.2007.70739},
  file = {贝叶斯网络分析可靠性建模中的不确定性:E\:\\000_我的研究\\11- 参考文献\\02_软件可靠性相关\\00- 综述性文章\\(2007-IEEE Trans) Uncertainty Analysis in Software Reliability Modeling by Bayesian Analysis with Maximum-Entropy Principle.pdf:PDF},
  review = {本文试图研究和量化拥有相关参数的单一组件与拥有众多组件的大型系统在软件可靠性建模中的不确定性因素。本文提出利用专家的意见和来自先前项目的历史数据来补充少数观察的不足来量化不确定因素。这是利用结合最大熵原理到贝叶斯理论的方法来完成的。本文还利用蒙特卡洛方法进一步考虑了系统级的不确定性分析，其中包含多个组件，每个组件都有其各自的模型、参数和不确定性。文中一些利用不同建模方法的例子来阐明该方法的通用性和有效性。此外，本文还讲述了该方法怎么利用考虑各组件之间的确定因素方法来改善一个大型系统的可靠性模型。},
  timestamp = {2012.02.22}
}

@ARTICLE{Gokhale2007p32-40,
  author = {Swapna S. Gokhale},
  title = {Architecture-Based Software Reliability Analysis：Overview and Limitations},
  journal = IEEE_J_DSC,
  year = {2007},
  volume = {4},
  pages = {32--40},
  number = {1},
  __markedentry = {[mariayh:6]},
  doi = {10.1109/TDSC.2007.4},
  file = {(2007-IEEE Trans) Architecture-Based Software Reliability Analysis：Overview and Limitations.pdf:02_软件可靠性相关\\00- 综述性文章\\(2007-IEEE Trans) Architecture-Based Software Reliability Analysis：Overview and Limitations.pdf:PDF},
  review = {本文概述了在基于体系结构的软件可靠性分析领域的当前研究水平，详细分析了现存研究的局限性，其中包括建模局限性、分析局限性、参数估计的局限性等，并且提出了克服这些局限性的方法。},
  timestamp = {2012.02.22},
  url = {http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=4099190}
}

@INPROCEEDINGS{Goldberg2007p1-11,
  author = {Goldberg, A. and Horvath, G. },
  title = {Software Fault Protection with ARINC 653},
  booktitle = {Proc. IEEE Aerospace Conf},
  year = {2007},
  pages = {1--11},
  abstract = {With flight <span class='snippet'>software</span> becoming ever more
	complex, assuming that it behaves perfectly is no longer realistic.
	At the same time Verification and Validation (V&amp;V) is consuming
	up to 50% of flight <span class='snippet'>software</span> development
	costs. The adaptation of fault protection concepts to flight <span
	class='snippet'>software</span> is attractive, particularly in the
	context of the fault containment and <span class='snippet'>health</span>
	<span class='snippet'>management</span> capabilities of ARINC 653.
	We propose a proactive, unified, model-based approach in which the
	behavior of the <span class='snippet'>software</span> is monitored
	against a model of its expected behavior. We describe how that may
	be incorporated into the ARINC 653 <span class='snippet'>health</span>
	<span class='snippet'>management</span> architecture. We describe
	<span class='snippet'>software</span> capabilities that facilitate
	<span class='snippet'>software</span> fault protection. These capabilities
	include enhancements to the ARINC 653 application executive, tools
	for <span class='snippet'>software</span> instrumentation, and a
	temporal logic runtime monitoring framework for high-level specification
	and monitoring. We analyze the aspects of the <span class='snippet'>software</span>
	that should be modeled and the types of failure responses. We show
	how these concepts may be applied to the Mission Data System (MDS)
	flight <span class='snippet'>software</span> framework.},
  doi = {10.1109/AERO.2007.352946},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Keller2007p1-16,
  author = {Keller, K. and Baldwin, A. and Ofsthun, S. and Swearingen, K. and
	Vian, J. and Wilmering, T. and Williams, Z. },
  title = {Health Management Engineering Environment and Open Integration Platform},
  booktitle = {Proc. IEEE Aerospace Conf},
  year = {2007},
  pages = {1--16},
  abstract = {The Phantom Works' role at The Boeing Company is to facilitate the
	development and transition of emerging technologies into Boeing products
	to provide a competitive advantage. Phantom works is developing a
	<span class='snippet'>health</span> <span class='snippet'>management</span>
	engineering environment (HMEE) to foster and transition <span class='snippet'>health</span>
	<span class='snippet'>management</span> technology from industry,
	academia and government technology base to Boeing Products. The HMEE
	consists of a program analysis and modeling environment, a development
	environment and an operations environment. The Program Analysis and
	Modeling Environment provides the processes and tools to do performance/cost
	driver analysis, root cause analysis, solution formulation, and cost/benefit
	trade studies including fleet simulation modeling. The development
	environment provides the design processes and synthesis tools required
	to develop solutions. The operations environment provides the processes
	and tools to integrate, test and mature the hardware and <span class='snippet'>software</span>
	elements of the <span class='snippet'>health</span> <span class='snippet'>management</span>
	solution. Major elements of the HMEE are an open <span class='snippet'>software</span>
	reference architecture, access to hardware laboratories to characterize
	degraded components/ subsystems, a data repository to store and access
	laboratory and field data, and hardware and <span class='snippet'>software</span>
	to support end to end technology demonstrations. It will support
	progressive levels of integration and demonstration from a single
	technology on a PC to the integration of this technology into a complete
	IVHM system with hardware in the loop as needed to provide vehicle
	data and address integration into vehicle avionics or a ground support
	system. Significant elements of the HMEE are in place with additional
	expansion and integration ongoing. The Boeing Phantom Works IVHM
	team is acquiring hardware, tools and algorithms from a number of
	suppliers to create a pool of resources for system level, end to
	end demonstrations of IVHM applications and development tools.},
  doi = {10.1109/AERO.2007.352919},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{lyu2007software,
  author = {Lyu, M.R.},
  title = {Software Reliability Engineering：A Roadmap},
  booktitle = {2007 Future of Software Engineering},
  year = {2007},
  pages = {153--170},
  organization = {IEEE Computer Society},
  note = {软件架构和常备组件的可靠性、可靠性设计、可靠性评定的测试、可靠性预计的度量、新兴的软件应用可靠性},
  file = {(2007) Software Reliability Engineering：A Roadmap.pdf:02_软件可靠性相关\\00- 综述性文章\\(2007) Software Reliability Engineering：A Roadmap.pdf:PDF},
  review = {在这篇文章中，作者回顾了软件可靠性工程的历史，分析了软件可靠性工程研究现状中存在的问题和困难，还从五个领域分别讲述了软件可靠性工程未来可能的发展方向和有前途的研究课题：软件架构和常备组件的可靠性、可靠性设计、可靠性评定的测试、可靠性预计的度量、新兴的软件应用可靠性。},
  url = {http://dl.acm.org/citation.cfm?id=1254716}
}

@INPROCEEDINGS{Swearingen2007p1-8,
  author = {Swearingen, K. and Majkowski, W. and Bruggeman, B. and Gilbertson,
	D. and Dunsdon, J. and Sykes, B. },
  title = {An Open System Architecture for Condition Based Maintenance Overview},
  booktitle = {Proc. IEEE Aerospace Conf},
  year = {2007},
  pages = {1--8},
  abstract = {The Boeing Company is developing an open integrated vehicle <span
	class='snippet'>health</span> <span class='snippet'>management</span>
	(IVHM) architecture; Smiths aerospace is extending and applying it.
	The charter of the Boeing phantom works is to provide tools and assets
	that enable next generation vehicles to be more reliable, efficient,
	capable, and autonomous. In support of those goals Integrated vehicle
	<span class='snippet'>health</span> <span class='snippet'>management</span>
	(IVHM) is receiving increased attention. The open system architecture
	for condition based maintenance (OSACBM) is a standard for building
	IVHM applications that meet those goals. Boeing has created a <span
	class='snippet'>software</span> framework for developing generic
	tools based on OSACBM that support scaleable, efficient modules which
	simplify IVHM integration in two ways: First, the integration improves
	the IVHM <span class='snippet'>software</span> models, <span class='snippet'>software</span>
	algorithms, data, communications, and embedded processors. Second,
	integration facilitates the use of IVHM with command, control, communication,
	mission, flight, maintenance, and other vehicle major systems.},
  doi = {10.1109/AERO.2007.352921},
  timestamp = {2012.02.20}
}

@ARTICLE{utkin2007imprecise,
  author = {Utkin, L. and Coolen, F.},
  title = {Imprecise reliability：An introductory overview},
  journal = {Intelligence in Reliability Engineering},
  year = {2007},
  pages = {261--306},
  file = {(2007) Imprecise reliability：An introductory overview.pdf:02_软件可靠性相关\\00- 综述性文章\\(2007) Imprecise reliability：An introductory overview.pdf:PDF},
  publisher = {Springer},
  review = {本文是对Imprecise Reliability的一个综述，依次概述了系统可靠性分析、Imprecise Reliability的判断、Imprecise
	Reliability的模型和推论、二阶可靠性模型、单系统可靠性、多系统可靠性、故障树分析法、可修复系统、结构可靠性、软件可靠性、人的可靠性、风险分析、安全工程。},
  timestamp = {2012.02.22}
}

@INPROCEEDINGS{Ahn2008p253-257,
  author = {Byeong Ho Ahn and Donghoon Lee},
  title = {Design Reviews of Health Care System},
  booktitle = {Proc. IEEE Int. Conf. Computational Cybernetics ICCC 2008},
  year = {2008},
  pages = {253--257},
  abstract = {To support healthcare organizations responses, many companies have
	started solutions to be satisfied the specific requirements of healthcare
	programs, and plans. This paper presents a designed and implemented
	care system for <span class='snippet'>health</span> diagnosis based
	on GPS location in the hospital. The designed handheld care system
	is implemented using an embedded Visual C++4.0 and Pocket PC2003
	<span class='snippet'>software</span> development kit (SDK) in an
	802.11 wireless network. We are confident that the research provides
	sufficient proof of the usefulness of this ubiquitous <span class='snippet'>health</span>
	system for the collection of care <span class='snippet'>management</span>
	information. The proposed system consists of a care <span class='snippet'>management</span>
	module for <span class='snippet'>health</span> diagnosis, a personal
	record module, a data transport module, and an image information
	<span class='snippet'>management</span> module for the clinic. System
	uses an applied security mechanism for critical data, and is accessed
	and controlled according to the GPS locations in the hospital. Also,
	for emergency status, transmission functions of clinic information
	are implemented using a wireless LAN protocol environment.},
  doi = {10.1109/ICCCYB.2008.4721416},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Chitre2008p1-10,
  author = {Chitre, M. },
  title = {DSAAV - A distributed software architecture for autonomous vehicles},
  booktitle = {Proc. OCEANS 2008},
  year = {2008},
  pages = {1--10},
  abstract = {Autonomous Underwater Vehicle (AUV) technology has matured over the
	past few decades but commercial AUVs today remain complex, proprietary
	and expensive. Modularity in AUVs at a <span class='snippet'>software</span>,
	electronics and mechanical level allows users to configure AUVs for
	specific missions by only including the required components. With
	multiple base AUVs, users may easily configure heterogeneous teams
	of AUVs for collaborative missions. Modular AUVs are also easier
	to maintain. We expect that open-architecture AUVs with open <span
	class='snippet'>software</span>/hardware interfaces, changeable modules
	and open source components will become widely available in the future.
	However AUV configuration <span class='snippet'>management</span>
	and module compatibility are issues that arise with modularity. An
	initiative at the Acoustic Research Laboratory (ARL) of the National
	University of Singapore (NUS) has yielded an open- architecture collaborative
	prototype AUV known as STARFISH. The <span class='snippet'>software</span>
	components in this AUV are based on the DSAAV architecture. DSAAV
	has been designed ground up with modular AUVs in mind. In a DSAAV
	compliant AUV, each module provides a uniform <span class='snippet'>software</span>
	interface that other AUV modules can access. This interface allows
	configuration of the module, logging of critical information, discovery
	of services, access to sensor &amp; actuator services, <span class='snippet'>health</span>
	monitoring and automated <span class='snippet'>software</span> update
	functionality. The interface is rich in functionality, yet light
	weight and portable to ensure that even low power micro-controllers
	can easily implement it. DSAAV can be implemented on any underlying
	communication backbone such as Ethernet, UDP/IP, etc. The <span class='snippet'>software</span>
	components running under DSAAV are independent of the underlying
	communication backbone and function without change in various AUVs
	and simulation environments. In this paper, we describe the basic
	philosophy and concepts behind DSAAV. We also outline the Application
	Programming Interface (API) for DSAAV compliant systems and describe
	its key functionality. It is our - hope that DSAAV will be adopted
	and extended by other AUVs in the future.},
  doi = {10.1109/OCEANS.2008.5151848},
  timestamp = {2012.02.20}
}

@ARTICLE{immonen2008survey,
  author = {Immonen, A. and Niemela, E.},
  title = {Survey of reliability and availability prediction methods from the
	viewpoint of software architecture},
  journal = {Software and Systems Modeling},
  year = {2008},
  volume = {7},
  pages = {49--65},
  number = {1},
  file = {(2008) Survey of reliability and availability prediction methods from the viewpoint of software architecture.pdf:02_软件可靠性相关\\00- 综述性文章\\(2008) Survey of reliability and availability prediction methods from the viewpoint of software architecture.pdf:PDF},
  publisher = {Springer},
  timestamp = {2012.02.22},
  url = {http://www.springerlink.com/content/h2604n4724716445/}
}

@INPROCEEDINGS{Jaw2008p1-8,
  author = {Jaw, L. C. and Homan, D. and Crum, V. and Chou, W. and Keller, K.
	and Swearingen, K. and Smith, T. },
  title = {Model-based Approach to Validation and Verification of Flight Critical
	Software},
  booktitle = {Proc. IEEE Aerospace Conf},
  year = {2008},
  pages = {1--8},
  abstract = {The time and cost associated with the development and certification
	of flight-critical <span class='snippet'>software</span> have been
	escalating at an alarming rate for modern, <span class='snippet'>software</span>-enabled
	air vehicles. This upward trend is expected to continue as future
	vehicles will be increasingly autonomous and intelligent. Affordable,
	efficient processes and tools are needed to control development costs
	and schedule, as well as to ensure the safety of these vehicles.
	This paper presents the results of a U. S. Air Force Research Laboratory
	(AFRL) sponsored project on the development of validation and verification
	(V&amp;V) technologies for flight-critical <span class='snippet'>software</span>.
	The purpose of the project is to improve the affordability and safety
	for <span class='snippet'>software</span> V&amp;V, specifically,
	for adaptive and/or mixed-criticality <span class='snippet'>software</span>.
	Adaptive <span class='snippet'>software</span> introduces uncertainties;
	mixed-criticality refers to the information passed between flight
	critical and mission critical <span class='snippet'>software</span>
	partitions, hence affecting in-flight adaptation (or control reconfiguration).
	The methodology developed in this project strongly suggests that
	an integrated, model-based approach be used in the V&amp;V of adaptive
	<span class='snippet'>software</span>. In this approach, the same
	physical model is used for design, implementation, and testing, while
	emphasis has been placed on checking the uncertainty and the accuracy
	of the models, which often are implemented in flight control and
	<span class='snippet'>health</span> <span class='snippet'>management</span>
	<span class='snippet'>software</span>. In the paper, we use a scenario
	to illustrate the capabilities of the proposed V&amp;V methodology.
	The scenario describes an unmanned air vehicle (UAV) executing an
	autonomous aerial refueling mission.},
  doi = {10.1109/AERO.2008.4526572},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Kim2009p70-73,
  author = {Hee-Cheol Kim and Gi-Soo Chung and Tae-Woong Kim},
  title = {A framework for health management services in nanofiber technique-based
	wellness wear systems},
  booktitle = {Proc. 11th Int. Conf. e-Health Networking, Applications and Services
	Healthcom 2009},
  year = {2009},
  pages = {70--73},
  abstract = {Digital garments or smart clothes with noninvasive smart sensors handling
	vital signs are expected to be key elements for our <span class='snippet'>health</span>
	<span class='snippet'>management</span> in the future. A wellness
	wear system is an integrated system including such smart clothes
	with sensors acquiring bio-signals, digital yarns transmitting those
	signals, integrated circuits and microprocessors for digital signal
	processing, wired and wireless communication, and application <span
	class='snippet'>software</span> systems providing various medical
	services based on vital signs acquired. This paper is centered around
	<span class='snippet'>software</span> aspects for <span class='snippet'>health</span>
	<span class='snippet'>management</span> in the wellness wear system,
	introducing a related project launched recently. As a very first
	and important step for it, we in this paper propose a service framework
	for <span class='snippet'>software</span> applications as parts of
	a wellness wear system that provides users with various medical services
	primarily using vital signs obtained from smart clothes.},
  doi = {.2009.5406193},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{pizka2009establishing,
  author = {Pizka, M. and Panas, T.},
  title = {Establishing Economic Effectiveness through Software Health-Management},
  booktitle = {1st International Workshop on Software Health Management, Pasadena},
  year = {2009},
  file = {(2009) Establishing Economic Effectiveness through Software Health-Management.pdf:06-健康管理\\软件健康管理\\(2009) Establishing Economic Effectiveness through Software Health-Management.pdf:PDF},
  keywords = {software health},
  review = {该文提出合适的软件健康管理不应只关注纠正软件系统的操作/运行，而应关注软件短期、中期、长期的经济效益、减少年度的软件维护成本，而软件健康管理的终极目的也应该是优化软件系统的整体经济效益和战略合适性（依据美国国防部-软件再造评估手册的优化策略）；从经济效益出发，作者提出软件健康管理的需求和定义：定期/经常对软件系统进行健康检测/有组织的评估，并且，如果检查中发现衰退的标记，要迅速采取措施来清除它的影响，这样可以有效地缓解逐步的/迅速的衰退，降低危机和花费，也扩展了软件系统的生命期。
	
	 作者也提出：将从整体效益出发的、这种面向长期的软件健康管理完全做到自动化或构建到系统中，是不切实际的假设。因此本文提出的软件健康管理是需要工具支持的分析、专家经验和人工一起执行的活动。
	
	 评价软件健康状态，需要有健康模型，需要定义软件质量，该文认为软件质量=经济效益；并依此建立了个二维质量模型。 
	
	 与衰退的关系： 大型机构每年软件预算>=70%耗在现有软件维护上，且如果不采取主动的（预防性的）对抗措施，大规模软件系统的质量会随时间逐渐衰退，进而影响ISO9216软件质量标准定义的所有质量属性：可靠性、功能性、有效性/效率、可移植性、可用性、可维护性和安全性。
	虽然系统的老化与衰退程度有关，但除软件系统的衰退之外，还有其他因素会导致可靠性、性能下降。 但作者仍将软件健康管理定义为是与软件衰退有关的活动：定义：定期/经常对软件系统进行健康检测/有组织的评估，并且，如果检查中发现衰退的标记，要迅速采取措施来清除它的影响，这样可以有效地缓解逐渐的/迅速的衰退，降低危机和花费，也扩展了软件系统的生命期。}
}

@INPROCEEDINGS{Schroede2009p1-6,
  author = {Schroede, J. B. and Clark, G. J. },
  title = {Developing health management for current and future inventory aircraft},
  booktitle = {Proc. IEEE Aerospace conference},
  year = {2009},
  pages = {1--6},
  abstract = {Designing and implementing <span class='snippet'>health</span> <span
	class='snippet'>management</span> systems for current and future
	aircraft poses many challenges, including interfacing with legacy
	onboard and offboard hardware and <span class='snippet'>software</span>
	systems, determining and justifying new functional requirements,
	and validating and verifying a robust, scalable system. Lessons learned
	from a current research and development program as well as prior
	<span class='snippet'>health</span> <span class='snippet'>management</span>
	system development experiences are presented as a road map to focus
	on the process of system development and integration. This paper
	also provides an overview of the concept and the coordination required
	to develop a working <span class='snippet'>health</span> <span class='snippet'>management</span>
	system.},
  doi = {10.1109/AERO.2009.4839688},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{,
  author = {Knot Pipatsrisawat and Adnan Darwiche and Ole J. Mengshoel and Johann
	Schumann},
  title = {Software Health Management：A Short Review of Challenges and Existing
	Techniques},
  booktitle = {1st International Workshop on Software Health Management},
  year = {2009},
  file = {(2009A) Software Health Management：A Short Review of Challenges and Existing Techniques (ppt).pdf:06-健康管理\\软件健康管理\\综述性 前瞻性paper\\(2009A) Software Health Management：A Short Review of Challenges and Existing Techniques (ppt).pdf:PDF;(2009A) Software Health Management：A Short Review of Challenges and Existing Techniques.pdf:06-健康管理\\软件健康管理\\综述性 前瞻性paper\\(2009A) Software Health Management：A Short Review of Challenges and Existing Techniques.pdf:PDF},
  keywords = {software health},
  review = {本文从IVHM（综合交通工具健康管理）系统及其功能引入，概述了复杂的交通工具系统中软件失效的危害、提高软件可靠性的必要性。概述了目前已有技术V&V的任务（查证和确认：确保软件发布前发现所有软件错误(零错误)，且一直能满足需求）及其不足。该文试图找到解决这些不足的方法。进而从软件健康管理（SWHM）的几个方面描述了面临的一些挑战和软件健康管理的有希望的技术，特别指出了那种同时包含软、硬件组件的系统中，预防软件失效面临的独特的挑战（问题），这能够根据上述讨论的框架，address一些SWHM问题。该文提出了与SWHM有关的技术的分类，希望这些分类能为解决软件故障和失效绘制蓝图。该文认为：虽然已有广范围的可用的技术，它们中没有一个能够满足作为SWHM系统的所有需求。最关键之处是：
	
	
	l 大多数方法属于事后处理（故障发生后或post-mortem：死后解刨），而不能执行预测（prognostic）功能或故障预知（forecasting）
	
	
	l 大多数方法是为离散软件定制的，如有限状态机或模式逻辑。在导航、航行和控制（GN&C）时的连续计算的监测很少涉及。
	
	
	l 这些技术只为软件。因此在处理软硬件都有的系统的故障时，性能、效果弱。
	
	
	l 不同软件生命周期使用的方法间的交互不多。不同阶段的技术的合作（如一个技术为另一个做铺垫）会增加覆盖度和效率
	
	
	l 几乎没有（只有少数）技术可以被证实是正确、可靠的，说明一个问题：SWHM软件自身也是一个安全关键的软件。
	
	 二、SWHM有关的技术分类的依据（也可作为度量来评估未来的SWHM技术）：
	
	实施所在的软件生命周期阶段：虽然SWHM一般是在代码发布后启用，但在实际操作中，软件生命周期早期阶段就可以并应该执行很多操作来预防软件失效，这些操作也是构建有效的健康管理系统的重要的先决条件
	
	故障处理方式（故障预防、移除、容错）：
	
	鉴于设计技术帮助预防故障的发生，甚至在系统built之前；
	
	典型的V&V（查证和确认）任务用于移除故障；
	
	传统的容错旨在有故障的情况下，保持原始软件的功能（比如冗余）。然而这个概念很容易被扩展为cover方法，如动态调试或动态重新配置，这些方法在故障自己显露后，修改软件以避免进一步的问题。
	
	FDIR：系统健康管理（system health management）区分它的方法为故障检测、隔离和修复，故障检测：识别一些故障的存在；故障隔离是确认故障源，并将它与系统其它部分隔离开的过程；在故障检测和/或隔离的基础上，故障恢复采取正确的措施，恢复系统到一个可运行的状态。
	
	自动化（程度）：技术分完全自动、半自动和需要很大程度的人工介入。虽然全自动过程更受欢迎/偏爱（比如在时间关键的应用），有人工参与的SWHM应用可能很重要，因为这样的架构可能会降低certification（证明、核证）的阈值（人仍然做关键决策）。
	
	资源：SWHM执行过程中需要大量的资源，both in setting up（如developing a model）and in
	计算资源。软件运行过程中，健康管理系统的能力和它需要的CPU/内存资源间存在着很清晰的平衡。
	
	完整性：一些方法能提供保证（如无死锁或空指针），而其他一些方法可能产生FP或fail to管理一些故障，同样的，其他方法提供统计分析和失效概率。
	
	
	 分类结果中体现出来的问题：
	
	 很多方法无法按照FDIR分类，因为他们注定是在故障活跃前实施的；
	
	 也没为设计和编码阶段考虑资源需求，因为要求不同（这两个阶段可不考虑资源限制？）
	
	 几乎没有方法能够保证故障处理的完整性；
	
	三、启示
	
	 未来的潜在研究：
	
	1) 将来的研究方向是什么？哪些已经完成或实现？
	
	a)SHM要能执行预测（prognostic）功能或故障预知（forecasting），克服事后处理的弊端
	
	b)设计一个系统化的方法/模型，要求能够保证故障处理的完整性：不同生命周期使用的方法/技术之间、FDIR的不同方法（检测、隔离、恢复）之间、故障处理手段（故障预防、容错、清除）之间，应加强交互、衔接和合作（如一个技术为另一个做铺垫），会增加覆盖度和效率。
	
	c)软件故障是环境敏感的，环境的变化也会引起软件故障。软件健康管理不能只考虑软件部件本身的故障模式，要能感应环境的影响，而且要能综合考虑其他系统、人为因素的影响
	
	d)设计的方法要具有一般性，既能建模离散的软件、也能建模连续的软件，这样，能更准确地预测潜在的失效并迅速地采取检测和恢复措施
	
	e)物理系统（physical systems）中的故障不同，软件故障发生的很突然，并且表现出意外（出乎意料）的行为，因此SHM要具有适应性，能应对未预期的、意外的模式或交互、行为（监测输入和组件间的交互）
	
	f)与很多硬件失效相反（硬件失效是逐渐发生的，如泄露导致的油压降低），大多数软件失效是瞬间发生的（软件衰退相关的失效是逐渐发生的），因此，运行时软件故障检测算法的实时性要好，能快速捕获异常；
	
	g)典型地，软件健康managers也是人工写的（written by hand），增加了它们也带有bug的机会/可能性；因此SHM系统的安全性和可靠性要好，最好是自治的、整体健康状态要好（基于群体的、分布式的）
	
	2) 算法潜在的扩展或改进方向是什么？
	
	3）未来的应用领域有哪些？},
  timestamp = {2012.02.20}
}

@TECHREPORT{chu2010review,
  author = {Chu, T.L. and Yue, M. and Martinez-Guridi, G. and Lehner, J.},
  title = {Review of Quantitative Software Reliability Methods},
  institution = {BROOKHAVEN NATIONAL LABORATORY (BNL)},
  year = {2010},
  file = {(2010-R) Review of Quantitative Software Reliability Methods.pdf:02_软件可靠性相关\\00- 综述性文章\\(2010-R) Review of Quantitative Software Reliability Methods.pdf:PDF}
}

@INPROCEEDINGS{dimov2010we,
  author = {Dimov, A. and Chandran, S.K. and Punnekkat, S.},
  title = {How do we collect data for software reliability estimation?},
  booktitle = {Proceedings of the 11th International Conference on Computer Systems
	and Technologies and Workshop for PhD Students in Computing on International
	Conference on Computer Systems and Technologies},
  year = {2010},
  pages = {155--160},
  organization = {ACM},
  file = {(2010-ACM) How do we collect data for software reliability estimation？.pdf:02_软件可靠性相关\\00- 综述性文章\\(2010-ACM) How do we collect data for software reliability estimation？.pdf:PDF},
  url = {http://dl.acm.org/citation.cfm?id=1839407}
}

@INPROCEEDINGS{Dubey2010p143-150,
  author = {Dubey, A. and Karsai, G. and Kereskenyi, R. and Mahadevan, N. },
  title = {A Real-Time Component Framework: Experience with CCM and ARINC-653},
  booktitle = {Proc. 13th IEEE Int Object/Component/Service-Oriented Real-Time Distributed
	Computing (ISORC) Symp},
  year = {2010},
  pages = {143--150},
  abstract = {The complexity of <span class='snippet'>software</span> in systems
	like aerospace vehicles has reached the point where new techniques
	are needed to ensure system dependability while improving the productivity
	of developers. One possible approach is to use precisely defined
	<span class='snippet'>software</span> execution platforms that (1)
	enable the system to be composed from separate components, (2) restrict
	component interactions and prevent fault propagation, and (3) whose
	compositional properties are well-known. In this paper we describe
	the initial steps towards building a platform that combines component-based
	<span class='snippet'>software</span> construction with hard real-time
	operating system services. Specifically, the paper discusses how
	the CORBA Component Model (CCM) could be combined with the ARINC-653
	platform services and the lessons learned from this experiment. The
	results point towards both extending the CCM as well as revising
	the ARINC-653.},
  doi = {10.1109/ISORC.2010.39},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Medynskiy2010p1-8,
  author = {Medynskiy, Y. and Mynatt, E. },
  title = {Salud!: An open infrastructure for developing and deploying health
	self-management applications},
  booktitle = {Proc. 4th Int Pervasive Computing Technologies for Healthcare (PervasiveHealth)
	Conf. -NO PERMISSIONS},
  year = {2010},
  pages = {1--8},
  abstract = {<span class='snippet'>Health</span> self-<span class='snippet'>management</span>
	strategies have been shown to improve <span class='snippet'>health</span>
	outcomes and decrease the cost of healthcare for individuals living
	with chronic illness. Personal <span class='snippet'>health</span>
	informatics applications, which allow individuals to track and review
	personal <span class='snippet'>health</span>-related information
	have, in turn, been shown to improve <span class='snippet'>health</span>
	self-<span class='snippet'>management</span> outcomes by supporting
	learning and reflection. We identify the need for a <span class='snippet'>software</span>
	infrastructure that facilitates the creation and deployment of such
	applications and describe our progress in developing and making available
	such an infrastructure, which we call Salud! We discuss how the design
	of Salud! follows from key strategies and results in the <span class='snippet'>health</span>
	self-<span class='snippet'>management</span> literature, and how
	its application programming interface (API) and related services
	can be leveraged by other researchers wishing to build a personal
	<span class='snippet'>health</span> informatics applications. Finally,
	we describe our own <span class='snippet'>health</span> self-<span
	class='snippet'>management</span> application that we are building
	using Salud!},
  doi = {10.4108/ICST.PERVASIVEHEALTH2010.8897},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{schumann2010towards,
  author = {Schumann, J. and Mengshoel, O.J. and Srivastava, A.N. and Darwiche,
	A.},
  title = {Towards software health management with bayesian networks},
  booktitle = {Proceedings of the FSE/SDP workshop on Future of software engineering
	research},
  year = {2010},
  pages = {331--336},
  organization = {ACM},
  file = {(2010) Towards Software Health Management with Bayesian Networks.pdf:06-健康管理\\软件健康管理\\(2010) Towards Software Health Management with Bayesian Networks.pdf:PDF},
  keywords = {software health},
  timestamp = {2012.02.20}
}

@UNPUBLISHED{yang2010faultDiagnosis,
  author = {杨欢},
  title = {故障诊断 summary _读书笔记},
  year = {2010},
  file = {故障诊断summary:02_软件可靠性相关\\故障诊断 summary.docx:Word},
  keywords = {fault diagnosis},
  timestamp = {2012.02.21}
}

@INPROCEEDINGS{Zhang2010p138-140,
  author = {Jing Zhang and Xuejiao Gao and Ying Duan},
  title = {Research and Discussion on Software Safety and Reliability},
  booktitle = {Proc. Second World Congress Software Engineering (WCSE)},
  year = {2010},
  volume = {2},
  pages = {138--140},
  __markedentry = {[mariayh:]},
  doi = {10.1109/WCSE.2010.35},
  file = {(2010) Research and Discussion on Software Safety and Reliability .pdf:02_软件可靠性相关\\00- 综述性文章\\(2010) Research and Discussion on Software Safety and Reliability .pdf:PDF},
  timestamp = {2012.02.22},
  url = {http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=5718364}
}

@INPROCEEDINGS{Al-Taee2011p1-6,
  author = {Al-Taee, M. A. and Jaradat, N. A. and Ali, D. M. A. },
  title = {Mobile phone-based health data acquisition system using Bluetooth
	technology},
  booktitle = {Proc. IEEE Jordan Conf. Applied Electrical Engineering and Computing
	Technologies (AEECT)},
  year = {2011},
  pages = {1--6},
  abstract = {The paper addresses development of a mobile <span class='snippet'>health</span>
	(mHealth) system for remote acquisition of patient data using Bluetooth
	technology. The proposed system aims at improving chronic disease
	<span class='snippet'>management</span> using low cost mobile phones.
	This is of great advantage especially when the patient is on the
	move. This is achieved by using the mobile's Bluetooth to transfer
	<span class='snippet'>health</span> data from patients' medical devices
	to a temporary storage buffer via an appropriate hardware interface,
	called Data Acquisition Module (DAM). The DAM is designed and successfully
	implemented using a microcontroller chip with simple associated <span
	class='snippet'>software</span> modules and hardware circuitry. The
	acquired data is then sent to a remote server using the patient's
	mobile phone. <span class='snippet'>Health</span> providers can then
	monitor <span class='snippet'>health</span> status of their patients
	regularly and help them for better chronic disease <span class='snippet'>management</span>.
	Performance of the developed data acquisition system is assessed
	experimentally and seamless data acquisition and monitoring has been
	demonstrated.},
  doi = {10.1109/AEECT.2011.6132524},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Dubey2011p1-18,
  author = {Dubey, A. and Karsai, G. and Mahadevan, N.},
  title = {Model-based software health management for real-time systems},
  booktitle = {Proc. IEEE Aerospace Conf},
  year = {2011},
  pages = {1--18},
  abstract = {Complexity of <span class='snippet'>software</span> systems has reached
	the point where we need run-time mechanisms that can be used to provide
	fault <span class='snippet'>management</span> services. Testing and
	verification may not cover all possible scenarios that a system will
	encounter, hence a simpler, yet formally specified run-time monitoring,
	diagnosis, and fault mitigation architecture is needed to increase
	the <span class='snippet'>software</span> system's dependability.
	The approach described in this paper borrows concepts and principles
	from the field of &#x201C;Systems <span class='snippet'>Health</span>
	<span class='snippet'>Management</span>&#x201D; for complex systems
	and implements a two level <span class='snippet'>health</span> <span
	class='snippet'>management</span> strategy that can be applied through
	a model-based <span class='snippet'>software</span> development process.
	The Component-level <span class='snippet'>Health</span> Manager (CLHM)
	for <span class='snippet'>software</span> components provides a localized
	and limited functionality for managing the <span class='snippet'>health</span>
	of a component locally. It also reports to the higher-level System
	<span class='snippet'>Health</span> Manager (SHM) which manages the
	<span class='snippet'>health</span> of the overall system. SHM consists
	of a diagnosis engine that uses the timed fault propagation (TFPG)
	model based on the component assembly. It reasons about the anomalies
	reported by CLHM and hypothesizes about the possible fault sources.
	Thereafter, necessary system level mitigation action can be taken.
	System-level mitigation approaches are subject of on-going investigations
	and have not been included in this paper. We conclude the paper with
	case study and discussion.},
  doi = {10.1109/AERO.2011.5747559},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Guo2011p5783-5786,
  author = {Lijuan Guo and Peng Yuan and Yonghui Song and Jianfeng Peng and Li
	Wang},
  title = {Case study and environmental risk assessment of the petrochemical
	industry},
  booktitle = {Proc. Int Remote Sensing, Environment and Transportation Engineering
	(RSETE) Conf},
  year = {2011},
  pages = {5783--5786},
  abstract = {The petrochemical industry is a high environmental risk industry because
	a large amount of toxic, hazardous, flammable and explosive substances
	were used in the processes of manufacture and operation. If the accidents
	of the leakage of chemicals, explosions and fires occurred, it would
	lead to release of toxic substances. The accidental releases are
	very dangerous to the republic <span class='snippet'>health</span>
	and the environmental receptor. Therefore, it is urgent to strengthen
	environmental risk assessment and <span class='snippet'>management</span>
	of petrochemical industry. Taking one petrochemical enterprise of
	Nanjing Chemical Industrial Park as an example, the essentials of
	environmental risk assessment of petrochemical project were analyzed.
	By identification of significant environmental risk sources, the
	chlorine leakage accident of storage tank was determined as the maximum
	creditable accident, and the method for leaking source strength calculation
	was given. Then the consequences of determined the maximum creditable
	accident was predicted by using gas diffusion model and the results
	of risk analyses were obtained. The results indicated that the damage
	distance was 1.4km if Chlorine leakage occurred under the disadvantageous
	weather conditions. The similar results were given using the <span
	class='snippet'>software</span> RMP* Comp provided by United States
	EPA. According to the RMP* Comp, the distance was 1.3km at the same
	weather condition. Risk assessment results showed that it would affect
	outside-factory environment if the chlorine leakage accident happened
	in the factory. Therefore it is required to improve the level of
	environmental risk <span class='snippet'>management</span> and to
	take necessary prevention measures. Finally risk <span class='snippet'>management</span>
	suggestions for petrochemical industry were put forward. Practical
	<span class='snippet'>management</span> strategies developed by evaluation
	results could reduce the probability of accidents release and prevent
	the occurrence of chlorine leakage more efficiently. The paper can
	provide a reference for people who do the related research on environme-
	- ntal risk assessment of petrochemical industry.},
  doi = {10.1109/RSETE.2011.5965668},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Guohua2011p1-5,
  author = {Wang Guohua and Wang Shuo},
  title = {Research on health management of automatic test equipment},
  booktitle = {Proc. Prognostics and System Health Management Conf. (PHM-Shenzhen)},
  year = {2011},
  pages = {1--5},
  abstract = {Automatic test equipment (ATE) is the facility to assure aircraft
	and weapon in well <span class='snippet'>health</span> state, thus,
	the <span class='snippet'>health</span> state of ATE itself is of
	vital significance. The connotation of <span class='snippet'>health</span>
	for ATE is the operation state with both correct function and satisfactory
	performance at the same time. To realize <span class='snippet'>health</span>
	<span class='snippet'>management</span> of ATE, the self-test and
	calibration method is introduced. High light is focused on ATE calibration
	interval prediction. To predict calibration intervals, a <span class='snippet'>health</span>
	state modeling and prognostic method was proposed based on Weibull
	distribution, which can provide an accurate prediction even with
	small samples. Moreover, cost was considered to optimize calibration
	intervals. An example of optimizing the calibration schedule of digital
	multimeter Agilent E1412A is given, which shows that this method
	is advanced and feasible. At last, an ATE <span class='snippet'>health</span>
	<span class='snippet'>management</span> implementation was introduced,
	which includes the traceability of ATE modules and the <span class='snippet'>software</span>
	architecture. Implementation shows that this method is feasible.},
  doi = {10.1109/PHM.2011.5939493},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Hartsock2011p512-517,
  author = {Hartsock, B. and MacLeod, B. and Roberge, D. and Asangansi, I. },
  title = {Software Extensibility Strategies for Health and Demographic Systems
	in Low-Income Countries},
  booktitle = {Proc. IEEE Global Humanitarian Technology Conf. (GHTC)},
  year = {2011},
  pages = {512--517},
  abstract = {<span class='snippet'>Software</span> systems used by <span class='snippet'>health</span>
	research centers in low-income countries typically need to be maintained
	and upgraded by individuals who do not have formal Computer Science
	education. Without careful planning, these data <span class='snippet'>management</span>
	<span class='snippet'>software</span> systems can require years of
	technical assistance from highly trained specialists. This work proposes
	<span class='snippet'>software</span> design strategies to minimize
	the complexity of maintaining a Java based enterprise scale <span
	class='snippet'>software</span> application in low-income countries.
	In this paper we identify various extension mechanisms. The goal
	is to significantly reduce the complexity required for users to tailor
	the system to their own particular projects.},
  doi = {10.1109/GHTC.2011.56},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Lindholm2011p362-365,
  author = {Lindholm, C. and Notander, J. P. and Host, M. },
  title = {Software Risk Analysis in Medical Device Development},
  booktitle = {Proc. 37th EUROMICRO Conf. Software Engineering and Advanced Applications
	(SEAA)},
  year = {2011},
  pages = {362--365},
  abstract = {The purpose of risk <span class='snippet'>management</span> in the
	development of safety-critical <span class='snippet'>software</span>
	is to eliminate or reduce harmful behaviour. In <span class='snippet'>health</span>-care
	it is essential to manage risk related to <span class='snippet'>software</span>
	due to its increased use in medical devices and other computer systems.
	This paper presents some of the experiences gained from an ongoing
	case study at a large hospital in Sweden. The study focuses on identification
	and analysis of risks using scenarios and how effective this approach
	is. The research is conducted as action research, with the aim of
	analysing and giving input to the organisation's new <span class='snippet'>software</span>
	risk <span class='snippet'>management</span> process.},
  doi = {10.1109/SEAA.2011.65},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{mengshoel2011software,
  author = {Mengshoel, O.J. and Schumann, J.M.},
  title = {Software Health Management with Bayesian Networks},
  booktitle = {2nd International Workshop On Software Health Management},
  year = {2011},
  file = {(2011A) Software Health Management with Bayesian Networks  (extended abstract -ppt).pdf:06-健康管理\\软件健康管理\\(2011A) Software Health Management with Bayesian Networks  (extended abstract -ppt).pdf:PDF;(2011A) Software Health Management with Bayesian Networks  (extended abstract).pdf:06-健康管理\\软件健康管理\\(2011A) Software Health Management with Bayesian Networks  (extended abstract).pdf:PDF},
  timestamp = {2012.02.20}
}

@UNPUBLISHED{Rushby2011onthereliability,
  author = {John Rushby},
  title = {On the reliability of Monitored Systems},
  note = {与英国城市大学的合作},
  year = {2011},
  file = {(2011A) On the reliability of Monitored Systems (ppt).pdf:06-健康管理\\软件健康管理\\(2011A) On the reliability of Monitored Systems (ppt).pdf:PDF},
  keywords = {software health},
  review = {Software Reliability
	
	Aleatory and Epistemic Uncertainty in Models
	
	Measuring/Predicting Software Reliability
	
	Measuring/Predicting Software Reliability：
	
	when to measure? pfds down to about 10的负4次方, it is feasible to measure
	
	software reliability by statistically valid random testing
	
	
	how to measure?So how do we establish that a piece of software is
	adequately
	
	reliable for a system that requires, say, 10的负6次方?
	
	
	Standards for system security or safety (e.g., Common
	
	Criteria, DO178B) require you to do a lot of V&V
	
	1） e.g., 57 V&V “objectives” at DO178B Level C (10的负5次方)
	
	• And you have to do more for higher levels
	
	2） 65 objectives at DO178B Level B (10的负7次方)
	
	3） 66 objectives at DO178B Level A (10的负9次方)},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Schumann2011p77-84,
  author = {Schumann, J. and Mengshoel, O. J. and Mbaya, T. },
  title = {Integrated Software and Sensor Health Management for Small Spacecraft},
  booktitle = {Proc. IEEE Fourth Int Space Mission Challenges for Information Technology
	(SMC-IT) Conf},
  year = {2011},
  pages = {77--84},
  abstract = {Despite their size, small spacecraft have highly complex architectures
	with many sensors and computer-controlled actuators. At the same
	time, size, weight, and budget constraints often dictate that small
	spacecraft are designed as single-string systems, which means that
	there are no or few redundant systems. Thus, all components, including
	<span class='snippet'>software</span>, must operate as reliably.
	Faults, if present, must be detected as early as possible to enable
	(usually limited) forms of mitigation. Telemetry bandwidth for such
	spacecraft is usually very limited. Therefore, fault detection and
	diagnosis must be performed on-board. Further restrictions include
	low computational power and small memory. In this paper, we discuss
	the use of Bayesian networks (BNs) to monitor the <span class='snippet'>health</span>
	of on-board <span class='snippet'>software</span> and sensor systems,
	and to perform advanced on-board diagnostic reasoning. Advanced compilation
	techniques are used to obtain a compact SSHM (<span class='snippet'>Software</span>
	and Sensor <span class='snippet'>Health</span> <span class='snippet'>Management</span>)
	system with a powerful reasoning engine, which can run in an embedded
	<span class='snippet'>software</span> environment and is amenable
	to V&amp;V. We successfully demonstrate our approach using an OSEK-compliant
	operating system kernel, and discuss in detail several nominal and
	fault scenarios for a small satellite simulation with a simple bang-bang
	controller.},
  doi = {10.1109/SMC-IT.2011.25},
  timestamp = {2012.02.20}
}

@INPROCEEDINGS{Srivastava2011p3-9,
  author = {Srivastava, A. N. and Schumann, J.},
  title = {The Case for Software Health Management},
  booktitle = {Proc. IEEE Fourth Int Space Mission Challenges for Information Technology
	(SMC-IT) Conf},
  year = {2011},
  pages = {3--9},
  abstract = {Software Health Management (SWHM) is a new field that is concerned
	with the development of tools and technologies to enable automated
	detection, diagnosis, prediction, and mitigation of adverse events
	due to software anomalies. Significant effort has been expended in
	the last several decades in the development of verification and validation
	(V&V) methods for software intensive systems, but it is becoming
	increasingly more apparent that this is not enough to guarantee that
	a complex software system meets all safety and reliability requirements.
	Modern software systems can exhibit a variety of failure modes which
	can go undetected in a verification and validation process. While
	standard techniques for error handling, fault detection and isolation
	can have significant benefits for many systems, it is becoming increasingly
	evident that new technologies and methods are necessary for the development
	of techniques to detect, diagnose, predict, and then mitigate the
	adverse events due to software that has already undergone significant
	verification and validation procedures. These software faults often
	arise due to the interaction between the software and the operating
	environment. Unanticipated environmental changes lead to software
	anomalies that may have significant impact on the overall success
	of the mission. Because software is ubiquitous, it is not sufficient
	that errors are detected only after they occur. Rather, software
	must be instrumented and monitored for failures before they happen.
	This prognostic capability will yield safer and more dependable systems
	for the future. This paper addresses the motivation, needs, and requirements
	of software health management as a new discipline.},
  doi = {10.1109/SMC-IT.2011.14},
  file = {(2011) The Case for Software Health Management （复杂软件系统的健康管理）.pdf:06-健康管理\\软件健康管理\\综述性 前瞻性paper\\(2011) The Case for Software Health Management （复杂软件系统的健康管理）.pdf:PDF},
  keywords = {software health},
  timestamp = {2012.02.20}
}

@ARTICLE{tyagi2011reliability,
  author = {Tyagi, K. and Sharma, A.},
  title = {Reliability of component based systems：a critical survey},
  journal = {ACM SIGSOFT Software Engineering Notes},
  year = {2011},
  volume = {36},
  pages = {1--6},
  number = {6},
  file = {(2011-ACM) Reliability of component based systems：a critical survey.pdf:02_软件可靠性相关\\00- 综述性文章\\(2011-ACM) Reliability of component based systems：a critical survey.pdf:PDF},
  publisher = {ACM},
  review = {本文对基于组件的软件系统可靠性估算的目前水平作了概述，对各种估算方法的运用范围、模型、研究方法、技术、和确定计划作了讨论。通过对这些方法的对比，提供了作者对决定未来基于组件的软件系统可靠性的研究方向的深刻理解和洞察。
	
	 文章首先对基于组件的软件系统可靠性估算作了介绍，然后提出了软件可靠性相关的难题、基于组件的软件系统可靠性模型以及对这些可靠性模型体系结构的一般要求。接着，作者对不同方法所描述的模型架构作了讨论，对Littlewood’s
	model、Cheung’s model等13种可靠性模型关于运用范围、模型、研究方法、技术、和确定计划做了结构分析。得出了对未来工作的推论，认为所有的应用程序可靠性计算应该着重考虑两点：一是个体组件的可靠性，二是系统的运作概况。},
  url = {http://dl.acm.org/citation.cfm?id=2047434}
}

@INPROCEEDINGS{Wang2011p492-496,
  author = {Haifeng Wang and Bifeng Song and Fangyi Wan},
  title = {A simulation software of prognostics and health management for aircraft
	fuel system},
  booktitle = {Proc. Int Quality, Reliability, Risk, Maintenance, and Safety Engineering
	(ICQR2MSE) Conf},
  year = {2011},
  pages = {492--496},
  abstract = {This paper aims to develop a simulation <span class='snippet'>software</span>
	of prognostics and <span class='snippet'>health</span> <span class='snippet'>management</span>
	(PHM) to carry out research on the method of diagnostic, prognostic,
	and <span class='snippet'>health</span> <span class='snippet'>management</span>
	for fuel system. The <span class='snippet'>software</span> is able
	to simulate the aircraft fuel flow performance such as pressure variation,
	flow rate in the fuel system pipe network both on the fuel system
	normal status and its malfunction status. When a failure mode of
	a component such as radial pump, ball valve happens, the nodes which
	maximum pressure variation has happen in the fuel system pipe network
	are selected, and the virtual sensor is arranged in these nodes.
	Through the signal correlation comparison of these virtual pressure
	sensors, the failure mode is diagnosed and prognosed. Since the PHM
	methods is not mature at present, and its false alarm rate is fairly
	high, the <span class='snippet'>software</span> can verify and study
	the novel PHM methods, which will supply technical support for the
	onboard aircraft PHM system in the future.},
  doi = {10.1109/ICQR2MSE.2011.5976660},
  timestamp = {2012.02.20}
}

@UNPUBLISHED{yang2012overviewPaper,
  author = {杨欢，易世界},
  title = {软件可靠性相关综述论文 读书笔记},
  year = {2012},
  file = {:02_软件可靠性相关\\01-软件可靠性相关综述论文 读书笔记 2012-2-22 (易世界).docx:Word},
  keywords = {reliability, availability},
  timestamp = {2012.02.21}
}

@UNPUBLISHED{yang2012p0-2,
  author = {杨欢},
  title = {软件健康管理综述},
  year = {2012},
  file = {软件健康管理综述:06-健康管理\\软件健康管理\\01-软件健康管理综述 2012-2-16.doc:Word;文章列表:06-健康管理\\软件健康管理\\01-软件健康管理综述 2012-2-16.xls:Excel},
  keywords = {软件健康，软件健康管理，可用性，可靠性, software health},
  timestamp = {2012.02.21}
}

@comment{jabref-meta: selector_review:}

@comment{jabref-meta: selector_publisher:}

@comment{jabref-meta: selector_author:}

@comment{jabref-meta: selector_journal:}

@comment{jabref-meta: selector_keywords:aging;availability;rejuvnation
;reliability;}

@comment{jabref-meta: groupsversion:3;}

@comment{jabref-meta: groupstree:
0 AllEntriesGroup:;
1 KeywordGroup:软件可靠性\;0\;keywords\;reliability, availability\;0\;0\;;
2 ExplicitGroup:综述性paper\;0\;Carr1991p15-19\;Dai2007p781-795\;Gokhale2
007p32-40\;Zhang2010p138-140\;chu2010review\;dimov2010we\;immonen2008s
urvey\;lyu2007software\;utkin2007imprecise\;;
1 KeywordGroup:软件健康管理\;0\;keywords\;software health\;0\;0\;;
1 ExplicitGroup:健康管理\;0\;;
1 ExplicitGroup:软件容错\;0\;;
1 KeywordGroup:软件故障诊断\;0\;keywords\;fault diagnosis\;0\;0\;;
2 ExplicitGroup:AIS方法\;0\;;
1 ExplicitGroup:读书笔记\;0\;yang2012overviewPaper\;yang2012p0-2\;;
}

